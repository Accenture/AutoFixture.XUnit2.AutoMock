name: Test module & collect code coverage
description: Run tests against specified module collecting code coverage
inputs:
  codecov-token:
    description: Value of Codecov token used to upload code coverage results
    required: true
  coverage-directory:
    description: Path to code coverage directory where results are being stored
    required: false
    default: ${{ github.workspace }}\src\opencover
  module-name:
    description: Name of the module
    required: true
  module-namespace:
    description: Name of the module namespace
    required: true
  target-framework:
    description: Framework version to run tests against
    required: true
runs:
  using: composite
  steps:
    - name: ðŸ§ª test ${{ inputs.module-name }} in ${{ inputs.target-framework }} & collect coverage
      id: test-and-collect-code-coverage
      run: |
        $path = [IO.Path]::Combine("${{ inputs.coverage-directory }}","${{ inputs.module-namespace }}.${{ inputs.module-name }}.xml")
        dotnet test ./src/${{ inputs.module-namespace }}.${{ inputs.module-name }}.Tests/ --no-build -f ${{ inputs.target-framework }} -e:CollectCoverage=true -e:CoverletOutputFormat=opencover -e:Exclude="[xunit*]*" -e:CoverletOutput=$path
        "FILE=${{ inputs.module-namespace }}.${{ inputs.module-name }}.${{ inputs.target-framework }}.xml" >> $env:GITHUB_OUTPUT
      shell: pwsh
    - name: ðŸ“¤ upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ inputs.codecov-token }}
        files: ${{ steps.test-and-collect-code-coverage.outputs.FILE }}
        directory: ${{ inputs.coverage-directory }}
        flags: unittests

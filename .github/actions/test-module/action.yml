name: Test module
description: Run tests against specified module
inputs:
  module-name:
    description: Name of the module
    required: true
  module-namespace:
    description: Name of the module namespace
    required: true
  codecov-token:
    description: Value of Codecov token used to upload code coverage results
    required: true
  coverage-directory:
    description: Path to code coverage directory where results are being stored
    required: false
    default: ${{ github.workspace }}\src\opencover
outputs:
  file-path:
    description: Signing key file path
    value: ${{ steps.signing-key.outputs.PATH }}
runs:
  using: composite
  steps:
    - name: ðŸ§ª test ${{ matrix.package_module }} in net7.0  & collect coverage
      id: module-code-coverage
      run: |
        $path = [IO.Path]::Combine("$env:CoverageDirectory","$env:ModuleFullName.xml")
        dotnet test ./src/$env:ModuleFullName.Tests/ --no-build -f $env:TargetFramework -e:CollectCoverage=true -e:CoverletOutputFormat=opencover -e:Exclude="[xunit*]*" -e:CoverletOutput=$path
        "FILE=$env:ModuleFullName.$env:TargetFramework.xml" >> $env:GITHUB_OUTPUT
      shell: pwsh
      env:
        CoverageDirectory: ${{ inputs.coverage-directory }}
        ModuleFullName: ${{ inputs.module-namespace }}.${{ inputs.module-name }}
        TargetFramework: net7.0
    - name: ðŸ§ª test ${{ matrix.package_module }} in net472
      run: dotnet test ./src/${{ inputs.module-namespace }}.${{ inputs.module-name }}.Tests/ --no-build -f net472
      shell: pwsh
    - name: ðŸ§ª test ${{ matrix.package_module }} in net48
      run: dotnet test ./src/${{ inputs.module-namespace }}.${{ inputs.module-name }}.Tests/ --no-build -f net48
      shell: pwsh
    - name: ðŸ“¤ upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ inputs.codecov-token }}
        files: ${{ steps.module-code-coverage.outputs.FILE }}
        directory: ${{ inputs.coverage-directory }}
        flags: unittests

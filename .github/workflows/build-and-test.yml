name: Build & test
on:
  workflow_call:
    inputs:
      collect-code-coverage:
        required: true
        type: boolean
      configuration:
        description: Name of the configuration
        required: true
        type: string
      module-name:
        description: Name of the module
        required: true
        type: string
      module-namespace:
        description: Name of the module namespace
        required: true
        type: string
      skip-target-framework-on-build:
        required: false
        type: boolean
        default: false
      target-framework:
        description: Compiles for a specific framework
        required: true
        type: string
      version:
        description: Assembly and package version
        required: true
        type: string
    secrets:
      signing-key-value:
        description: Value of the signing key
        required: true
env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  Version: ${{ inputs.version }}
  Configuration: ${{ inputs.configuration }}
jobs:
  run:
    runs-on: windows-latest # We are using windows instead of ubuntu becaus it provides support for net472 & net48.
    timeout-minutes: 15
    steps:
    - name: üì• checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: üñäÔ∏è materialize signing key
      id: signing-key
      uses: ./.github/actions/materialize-signing-key
      with:
        signing-key-value: ${{ secrets.signing-key-value }}
    - name: üíæ cache nuget packages
      uses: actions/cache@v3
      with:
        path: ${{ env.NUGET_PACKAGES }}
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: üèóÔ∏è build
      run: dotnet build ./src/${{ inputs.module-namespace }}.${{ inputs.module-name }}.sln${{ inputs.skip-target-framework-on-build == false && format(' -f {0}', inputs.target-framework) || '' }}
      env:
        CI: true
        StrongNameKey: ${{ secrets.SIGNING_KEY }}
        StrongNameKeyPath: ${{ steps.signing-key.outputs.file-path }}
    - name: üß™ test ${{ inputs.module-name }} in ${{ inputs.target-framework }}
      if: ${{ inputs.collect-code-coverage != true }}
      run: dotnet test ./src/${{ inputs.module-namespace }}.${{ inputs.module-name }}.Tests/ --no-build -f ${{ inputs.target-framework }}
    - name: üß™ test ${{ inputs.module-name }} in ${{ inputs.target-framework }} & collect coverage
      if: ${{ inputs.collect-code-coverage == true }}
      uses: ./.github/actions/test-and-collect-coverage
      with:
        codecov-token: ${{ secrets.CODECOV_TOKEN }}
        module-name: ${{ inputs.module-name }}
        module-namespace: ${{ inputs.module-namespace }}
        target-framework: ${{ inputs.target-framework }}
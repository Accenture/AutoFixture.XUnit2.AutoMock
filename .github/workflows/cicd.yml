name: CI/CD
on:
  pull_request:
    paths:
      - 'src/**'
      - 'GitVersion.yml'
      - '.github/workflows/cicd.yml'
      - '.github/actions/materialize-signing-key/**'
    types: [opened, synchronize, reopened]
  push:
    branches:
      - 'master'
    paths:
      - 'src/**'
      - 'GitVersion.yml'
      - '.github/workflows/cicd.yml'
      - '.github/actions/materialize-signing-key/**'
  workflow_dispatch:
    inputs:
      buildAutoMoq:
        description: 'Build AutoMoq'
        required: true
        type: boolean
        default: true
      buildAutoNSubstitute:
        description: 'Build AutoNSubstitute'
        required: true
        type: boolean
        default: true
      buildAutoFakeItEasy:
        description: 'Build AutoFakeItEasy'
        required: true
        type: boolean
        default: true
      environment:
        description: 'Environment'
        type: environment
        required: true
        default: prod
defaults:
  run:
    shell: pwsh
jobs:
  init:
    uses: ./.github/workflows/init.yml
    with:
      buildAutoMoq: ${{inputs.buildAutoMoq}}
      buildAutoNSubstitute: ${{inputs.buildAutoNSubstitute}}
      buildAutoFakeItEasy: ${{inputs.buildAutoFakeItEasy}}
  build-and-test:
    needs: init
    strategy:
      matrix:
        module-name: ${{ fromJSON(needs.init.outputs.modules) }}
        target-framework: [net472, net48, net7.0]
        include:
          - target-framework: net7.0
            collect-code-coverage: true
            skip-target-framework-on-build: true
    if: ${{ needs.init.outputs.modules != '' }}
    uses: ./.github/workflows/build-and-test.yml
    with:
      version: ${{ needs.init.outputs.version }}
      module-name: ${{ matrix.module-name }}
      module-namespace: ${{ needs.init.outputs.namespace }}
      target-framework: ${{ matrix.target-framework }}
      configuration: ${{ needs.init.outputs.configuration }}
      skip-target-framework-on-build: ${{ matrix.skip-target-framework-on-build == true }}
      collect-code-coverage: ${{ matrix.collect-code-coverage == true }}
    secrets:
      signing-key-value: ${{ secrets.SIGNING_KEY }}
  pack:
    needs: [init, build-and-test]
    strategy:
      matrix:
        module-name: ${{ fromJSON(needs.init.outputs.modules) }}
        exclude:
          - module-name: Core
    if: ${{ needs.init.outputs.modules != '' }}
    uses: ./.github/workflows/pack.yml
    with:
      version: ${{ needs.init.outputs.version }}
      module-name: ${{ matrix.module-name }}
      module-namespace: ${{ needs.init.outputs.namespace }}
      configuration: ${{ needs.init.outputs.configuration }}
    secrets:
      signing-key-value: ${{ secrets.SIGNING_KEY }}
  publish:
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 15
    needs: [pack]
    environment: ${{ inputs.environment }}
    if: ${{ inputs.environment != null }}
    steps:
      - name: 🔽 download packages
        uses: actions/download-artifact@v3
        with:
          name: packages
      - name: 📤 push
        run: dotnet nuget push **/*.nupkg  --api-key ${{ secrets.NUGET_API_KEY }} --source "nuget.org" --skip-duplicate
  tag:
    needs: [publish, init]
    # Allow tagging only on the master branch when publish was successful
    if: ${{ github.ref_name == 'master' && needs.publish.result == 'success' }}
    uses: ./.github/workflows/tag.yml
    with:
      version: ${{ needs.init.outputs.version }}

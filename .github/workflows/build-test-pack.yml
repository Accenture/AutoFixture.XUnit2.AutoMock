name: '🏗️ Build, test & pack'

on:
  workflow_call:
    inputs:
      configuration:
        description: Name of the configuration
        required: true
        type: string
      module-name:
        description: Name of the module
        required: true
        type: string
      module-namespace:
        description: Name of the module namespace
        required: true
        type: string
      version:
        description: Assembly and package version
        required: true
        type: string
    secrets:
      codecov-token:
        description: Value of Codecov token used to upload code coverage results
        required: true
      signing-key-value:
        description: Value of the signing key
        required: true

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  NUGET_PACKAGES: ${{ github.workspace }}\.nuget\packages
  Version: ${{ inputs.version }}
  Configuration: ${{ inputs.configuration }}

defaults:
  run:
    shell: pwsh

jobs:
  run:
    runs-on: windows-latest # We are using windows instead of ubuntu becaus it provides support for net472 & net48.
    timeout-minutes: 15
    permissions:
      contents: read
    steps:
    - name: 📥 checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: 🖊️ materialize signing key
      id: signing-key
      uses: ./.github/actions/materialize-signing-key
      with:
        signing-key-value: ${{ secrets.signing-key-value }}
    - name: 💾 cache nuget packages
      uses: actions/cache@v4
      with:
        path: ${{ env.NUGET_PACKAGES }}
        key: ${{ runner.os }}-nuget-${{ inputs.module-name }}-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-${{ inputs.module-name }}
    - name: 🏗️ build
      run: dotnet build ./src/${{ inputs.module-namespace }}.${{ inputs.module-name }}.sln
      env:
        StrongNameKey: ${{ secrets.signing-key-value }}
        StrongNameKeyPath: ${{ steps.signing-key.outputs.file-path }}
    - name: 🧪 test ${{ inputs.module-name }} in [net472, net48]
      run: |
        dotnet test ./src/${{ inputs.module-namespace }}.${{ inputs.module-name }}.Tests/ --no-build -f net472
        dotnet test ./src/${{ inputs.module-namespace }}.${{ inputs.module-name }}.Tests/ --no-build -f net48
    - name: 🧪 test ${{ inputs.module-name }} in net8.0 & collect coverage
      uses: ./.github/actions/test-and-collect-coverage
      with:
        codecov-token: ${{ secrets.codecov-token }}
        module-name: ${{ inputs.module-name }}
        module-namespace: ${{ inputs.module-namespace }}
        target-framework: net8.0
    - name: 📦 pack
      if: ${{ startsWith(inputs.module-name, 'Auto' ) }}
      run: dotnet pack ./src/${{ inputs.module-namespace }}.${{ inputs.module-name }}
      env:
          StrongNameKey: ${{ secrets.signing-key-value }}
          StrongNameKeyPath: ${{ steps.signing-key.outputs.file-path }}
    - name: 🔼 upload packages
      if: ${{ startsWith(inputs.module-name, 'Auto' ) }}
      uses: actions/upload-artifact@v4
      with:
          name: packages-${{ inputs.module-name }}
          path: |
            ./src/**/*.nupkg
            ./src/**/*.snupkg
